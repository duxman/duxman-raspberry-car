/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package emu;

import static emu.CGPIOEmu.m_hPortNameGPIO;
import static emu.CGPIOEmu.m_properties;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Collections;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Map;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import sun.awt.HorizBagLayout;

/**
 *
 * @author duxman
 */
public class CFormEmulator extends javax.swing.JFrame implements ActionListener
{
   public static String GPIO_INPUT  = "GPIO_IN";
   public static String GPIO_OUTPUT = "GPIO_OUT";
   public static String GPIO_NOT    = "GPIO";
   public static String GPIO_GNDVOLT    = "NONE";

    /**
     * Creates new form CFormEmulator
     */
    JPanel panel;
    static Map<Integer, JLabel> m_hGPIO;
    public CFormEmulator()
    {
        initComponents();
        m_hGPIO = ( Map<Integer, JLabel> )  Collections.synchronizedMap (new HashMap<Integer, JLabel>() );
        createControls();
    }
    
    private void createControls()
    {
        setLayout(new BorderLayout());
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel,BoxLayout.X_AXIS));
        
        add(panel,BorderLayout.CENTER);
        
         Enumeration em = m_properties.keys();
         int i=0;
         while(em.hasMoreElements())
         { 
            String key    = (String)em.nextElement();
            String value  = (String)m_properties.get(key);        
            JPanel l= null;
            
            if(value.equals(GPIO_INPUT))
            {
                l=creaEtiqueta(i, CGPIOEmu.m_iconoVerdeOFF);                
            }
            if(value.equals(GPIO_OUTPUT))
            {
                l=creaEtiqueta(i, CGPIOEmu.m_iconoRojoOFF);
            }
            if(value.equals(GPIO_NOT) || value.equals(GPIO_GNDVOLT))
            {
                l=creaEtiqueta(i, CGPIOEmu.m_iconoOFF);
            }
            i++;
            panel.add(l);
           
            
            
         }                              
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(1500,90);
        setVisible(true);        
    }
    
    private JPanel creaEtiqueta(int id, ImageIcon icono)
    {
     
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel,BoxLayout.Y_AXIS));
        
        JLabel label1= new JLabel("IO"+ id);
        JLabel label2= new JLabel(icono );                
        panel.add(label1);
        panel.add(label2);
        
        m_hGPIO.put(id,label2);
        return panel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e)
    {    
        //panel.add(new JButton("Button"));
        panel.revalidate();
        validate();
    }
}
